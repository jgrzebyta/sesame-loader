#+startup: indent showall
#+title: README file for sesame loader
#+author: Jacek Grzebyta
#+date: <2016-10-12 Wed>
#+startup: showall

[[https://travis-ci.org/jgrzebyta/sesame-loader.svg?branch=master]]


* 1. What is that?

=Sesame-loader= provides command line tools for managing Eclipse RDF4J/Sesame repository.

** Current package version

#+name: get-version
#+begin_src shell :exports results :results output raw drawer
version=$(gawk '{match($0,/VERSION=(.*$)/,g); if(length(g)>0) {print "Current version: " g[1] }}' version.properties)
echo "${version}"
#+end_src

#+RESULTS: get-version
:RESULTS:
Current version: 0.1.10
:END:

** All binnary releases
#+name: list-tags
#+begin_src shell :exports results :results output replace table
echo "Tag | Commit | Date "
git tag --format="%(refname:strip=2), %(objectname:short), %(committerdate)" --sort="-committerdate"
#+end_src

Table contains list of all binnary releases with commit and date of commit. The top record is the latest.

#+RESULTS: list-tags
|     Tag | Commit  | Date                           |
|  0.1.10 | 03a67c0 | Tue Nov 22 12:32:54 2016 +0000 |
|   0.1.9 | e65c17f | Wed Oct 12 16:36:17 2016 +0100 |
|   0.1.8 | dc8deb6 | Wed Oct 12 11:42:17 2016 +0100 |
|   0.1.7 | d991e73 | Mon Jul 11 11:34:09 2016 +0100 |
|   0.1.6 | a516a21 | Wed Jun 29 23:53:06 2016 +0100 |
|   0.1.5 | bf65658 | Wed Jun 29 15:00:35 2016 +0100 |
|   0.1.4 | bfd3489 | Wed Jun 29 10:51:07 2016 +0100 |
| 0.1.3.1 | 20dc78f | Tue Jun 7 16:49:38 2016 +0100  |
|   0.1.3 | 3bdb25f | Tue Jun 7 01:14:42 2016 +0100  |
|   0.1.2 | c9ac85d | Mon Jun 6 17:33:38 2016 +0100  |
|  v0.1.1 | 617f05c | Thu May 19 15:07:43 2016 +0100 |
|  v0.0.1 | 2fe4ef3 | Thu Apr 28 09:41:36 2016 +0100 |
|  v0.0.3 | bc1f8fe |                                |



* 2. List of commands
** rdf4j.loader
Loads data into triple store.
This is implementation of method described in [article] (http://www.rivuli-development.com/further-reading/sesame-cookbook/loading-large-file-in-sesame-native/) published in Rivuli's *The Sesame Coocbook*.


#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.loader [options]
#+end_src

*** Options
    - --server URL, -s :: Sesame SPARQL endpoint URL. Default: http://localhost:8080/rdf4j-server                  
    - --repositiry NAME, -r :: Repository id. Default: test
    - --file FILE, -f :: Data file path                                       
    - --context IRI, -c :: Context (graph name) of the dataset. *If FILE's format is context-aware (e.g. TriG) than this option is ignored.* 
    - --version, -V :: Print version number
    - --help, -h :: Help
*** Example

Populate triple store at =http://localhost:8090/rdf4j-server/test= with data from two files.

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.loader -s http://localhost:8090/rdf4j-server/ -r test -f ~/database/data1.ttl -f ~/database/data2.ttl
#+end_src


** rdf4.sparql
Executes SPARQL /query/ on data provided by /file/.  

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.sparql [options]
#+end_src

*** Options
    - --file FILE, -f :: Data file path 
    - --query STRINGm -q :: Path to file with query or the query itself
    - --version, -v :: Print version number
    - --help, -h :: Help
*** Example

Process SPARQL request =select * where {?s ?p ?o} limit 10= on data located in two files.

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf.4sparql -s http://localhost:8090/rdf4j-server/ -r test -f ~/database/data1.ttl -f ~/database/data2.ttl -q "select * where {?s ?p ?o} limit 10"
#+end_src


Process SPARQL request from file =~/database/process.sparql= on data located in two files.

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.sparql -s http://localhost:8090/rdf4j-server/ -r test -f ~/database/data1.ttl -f ~/database/data2.ttl -q ~/database/process.sparql
#+end_src

** rdf4j.dump
Creates remote repository dump file in *TriG* format. =[[rdf4j.loader]]= function is suitable for restoring triple. 

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.dump [options]
#+end_src

*** Options
- --help, -h :: Help
- --server URL, -s :: RDF4J SPARQL endpoint URL, default =http://localhost:8080/rdf4j-server=
- --repositiry NAME, -r :: Repository id, default: =test=
- --file FILE, -f :: Data file path or standard output if not given 
- --version, -V :: Display program version 

*** Example
Dump =http://localhpost:8090/rdf4j-server/test= repository to standard output.

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.dump -s http://localhpost:8090/rdf4j-server/test -r test
#+end_src


Dump =http://localhpost:8090/rdf4j-server/test= repository to =/tmp/test-repo.trig= file.

#+begin_src shell
java -cp triple-loader-0.1.10-SNAPSHOT-standalone.jar rdf4j.dump -s http://localhpost:8090/rdf4j-server/test -r test -f /tmp/test-repo.trig
#+end_src

* 3. Contacts
To contact with me please use *Issues* interface.
